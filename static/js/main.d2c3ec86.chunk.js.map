{"version":3,"sources":["logo.svg","heart1.svg","report.svg","components/landingpage.js","components/Assessment/SymptomsForm.js","components/Assessment/NewAssessment.js","components/AdminLanding.js","components/login.js","components/register.js","components/PatientChart.js","components/PatientList.js","components/AssessmentList.js","components/navigation.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","LandingPage","className","style","color","src","heart","alt","Component","SymptomsForm","props","type","checked","item","onChange","handleChange","id","name","NewAssessment","handleSubmit","changeType","console","log","state","axios","post","assessments","then","response","history","push","detail","data","catch","error","patient_id","patient_age","vht_id","date","gestational_age","heart_rate","systolic","diastolic","ews_color","symptoms","referred","follow_up","follow_up_date","recheck","time_scale","initial","temp_symptoms","symptoms_arr","bind","handleCheckbox","ValidatorForm","addValidationRule","value","this","setState","prevState","updatedSymp","map","each","symp","index","parseInt","addSymptoms","event","target","symptom","key","backgroundColor","margin","padding","textAlign","ref","onSubmit","onError","errors","col","label","validators","errorMessages","Button","React","Landing_List","SimpleTabs","TabPanel","children","other","Typography","component","role","hidden","aria-labelledby","Box","p","a11yProps","useStyles","makeStyles","theme","root","flexGrow","appbar","alignItems","classes","useState","setValue","AppBar","position","Tabs","newValue","aria-label","Tab","Patient_list","User_list","columns","title","field","surname","sex","birthYear","editable","onRowUpdate","newData","oldData","Promise","resolve","setTimeout","indexOf","onRowDelete","splice","onRowAdd","reject","actions","icon","tooltip","onClick","window","open","username","password","Login","loginHandler","e","preventDefault","localStorage","setItem","setTheState","testConsoleLog","setRole","navigate","errorMsg","isAdmin","isUser","roles","forEach","status","hintText","inputStyle","styles","white","floatingLabelText","hintStyle","grey","floatingLabelStyle","input","showErrorMsg","primary","button","textOverflow","whiteSpace","overflow","width","Register","registerHandler","passwordMatch","checkPasswordMatch","fieldEmpty","isFieldEmpty","toast","clearFields","address","dob","gender","passwordRetyped","disableButton","trim","document","getElementById","reset","configure","radioHandler","POSITION","BOTTOM_RIGHT","disable","PatientChart","dataLine","labels","datasets","fill","borderColor","options","legend","fontColor","scales","yAxes","ticks","fontSize","responsive","PatientList","getPatientList","patientList","patient","split","birthDate","birth_date","get","populateData","AssessmentList","getAssessmentList","assessmentList","assessment","_id","assessment_obj","toString","PrivateRoute","rest","authed","render","getItem","to","pathname","from","location","Navigation","exact","path","Form","App","fixedHeader","transparent","scroll","waterfall","seamed","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2HAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,gFCA3CD,EAAOC,QAAU,IAA0B,oC,oRCSrCC,G,wLA2CA,OACI,yBAAKC,UAAU,gBACT,wBAAIC,MAAS,CAACC,MAAQ,UAAtB,sBACA,uBAAGD,MAAS,CAAEC,MAAQ,UAAtB,mEACA,yBAAKC,IAAKC,IAAOC,IAAI,c,GA/CXC,cAsDGA,YAWCA,YAwBfP,Q,yBCnFAQ,MAbf,SAAsBC,GAClB,OACI,yBAAKR,UAAY,YACb,uBAAGC,MAAO,CAAEC,MAAO,SACnB,2BACIO,KAAO,WACPC,QAAWF,EAAMG,KAAKD,QACtBE,SAAU,kBAAMJ,EAAMK,aAAaL,EAAMG,KAAKG,OAEjDN,EAAMG,KAAKI,QC2STC,E,YA3SX,aAAc,IAAD,8BACT,+CAkHJC,aAAe,WACX,EAAKC,aACLC,QAAQC,IAAI,EAAKC,OACbC,IAAMC,KAAK,wCAAyC,EAAKF,MAAMG,aAC9DC,MAAK,SAAAC,GACFP,QAAQC,IAAI,EAAKC,OACjB,EAAKb,MAAMmB,QAAQC,KACf,IACA,CAAEC,OAAQH,EAASI,UAG1BC,OAAM,SAAAC,GACHb,QAAQC,IAAI,eACZD,QAAQC,IAAIY,OA9HpB,EAAKX,MAAQ,CACTG,YAAc,CAEVV,GAAI,GACJmB,WAAY,GACZC,YAAa,GACbC,OAAS,KACTC,KAAM,GACNC,gBAAiB,GACjBC,WAAY,GACZC,SAAU,GACVC,UAAW,GACXC,UAAW,GACXC,SAAU,GACVC,UAAU,EACVC,WAAW,EACXC,eAAgB,KAChBC,SAAS,EAGTC,WAAY,GACZC,QAAS,GACTC,cAAe,GAEfC,aAAc,CACV,CAACpC,GAAI,EAAGC,KAAM,gCAAiCL,SAAS,GACxD,CAACI,GAAI,EAAGC,KAAM,WAAYL,SAAS,GACnC,CAACI,GAAI,EAAGC,KAAM,iBAAkBL,SAAS,GACzC,CAACI,GAAI,EAAGC,KAAM,iBAAkBL,SAAS,GACzC,CAACI,GAAI,EAAGC,KAAM,WAAYL,SAAS,GACnC,CAACI,GAAI,EAAGC,KAAM,WAAYL,SAAS,GACnC,CAACI,GAAI,EAAGC,KAAM,SAAUL,SAAS,MAI7C,EAAKG,aAAe,EAAKA,aAAasC,KAAlB,gBACpB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBAtCb,E,iFA6DTE,gBAAcC,kBAAkB,cAAc,SAACC,GAC3C,MAAc,UAAVA,GAA+B,WAAVA,GAA+B,QAATA,O,qCAYxCzC,GACX0C,KAAKC,UAAS,SAAAC,GACV,IAAMC,EAAcD,EAAUlC,YAAY0B,aAAaU,KAAI,SAAAC,GAIvD,OAHGA,EAAK/C,KAAOA,IACX+C,EAAKnD,SAAWmD,EAAKnD,SAElBmD,KAGX,OADAH,EAAUlC,YAAY0B,aAAeS,EAC9BD,KAEXvC,QAAQC,IAAIoC,KAAKnC,MAAMG,YAAY0B,gB,oCAInC,IAAMY,EAAON,KAAKnC,MAAMG,YAAY0B,aACpC,IAAI,IAAIa,KAASD,EACTA,EAAKC,GAAOrD,SACZ8C,KAAKnC,MAAMG,YAAYkB,SAASd,KAAKkC,EAAKC,GAAOhD,Q,mCAMzDyC,KAAKnC,MAAMG,YAAYc,WAAa0B,SAASR,KAAKnC,MAAMG,YAAYc,YACpEkB,KAAKnC,MAAMG,YAAYe,SAAWyB,SAASR,KAAKnC,MAAMG,YAAYe,UAClEiB,KAAKnC,MAAMG,YAAYgB,UAAYwB,SAASR,KAAKnC,MAAMG,YAAYgB,WACvB,KAAzCgB,KAAKnC,MAAMG,YAAYyB,eACtBO,KAAKnC,MAAMG,YAAYkB,SAASd,KAAK4B,KAAKnC,MAAMG,YAAYyB,eAEhEO,KAAKS,cACLT,KAAKnC,MAAMG,YAAYa,iBAAmBmB,KAAKnC,MAAMG,YAAYuB,kBAC1DS,KAAKnC,MAAMG,YAAYyB,qBACvBO,KAAKnC,MAAMG,YAAY0B,oBACvBM,KAAKnC,MAAMG,YAAYwB,eACvBQ,KAAKnC,MAAMG,YAAYuB,a,mCAyBrBmB,GAAO,IACR1C,EAAgBgC,KAAKnC,MAArBG,YACRA,EAAY0C,EAAMC,OAAOpD,MAAQmD,EAAMC,OAAOZ,MAC9CC,KAAKC,SAAS,CAAEjC,kB,+BAKV,IAAD,OACC4C,EAAUZ,KAAKnC,MAAMG,YAAY0B,aAAaU,KAAI,SAAAjD,GAAI,OAAI,kBAAC,EAAD,CAAU0D,IAAO1D,EAAKG,GAAIH,KAAQA,EAC5CE,aAAiB,EAAKuC,oBAE5E,OACI,kBAAC,gBAAD,CACInD,MAAO,CACHqE,gBAAiB,QACjBC,OAAS,OACTC,QAAU,OACVC,UAAW,UAIfC,IAAI,OACJC,SAAUnB,KAAKvC,aACf2D,QAAS,SAAAC,GAAM,OAAI1D,QAAQC,IAAIyD,KAE/B,kBAAC,OAAD,KACI,kBAAC,OAAD,CAAMC,IAAK,GACP,8CACA,kBAAC,gBAAD,CACIC,MAAM,qBACNnE,SAAU4C,KAAK3C,aACfE,KAAK,KACLwC,MAAOC,KAAKnC,MAAMG,YAAYV,GAC9BkE,WAAY,CAAC,YACbC,cAAe,CAAC,4BAEpB,6BACA,kBAAC,gBAAD,CACIF,MAAM,aACNnE,SAAU4C,KAAK3C,aACfE,KAAK,aACLwC,MAAOC,KAAKnC,MAAMG,YAAYS,WAC9B+C,WAAY,CAAC,YACbC,cAAe,CAAC,4BAEpB,6BAEA,kBAAC,gBAAD,CACIF,MAAM,WACNnE,SAAU4C,KAAK3C,aACfE,KAAK,UACLwC,MAAOC,KAAKnC,MAAMG,YAAYwB,QAC9BgC,WAAY,CAAC,YACbC,cAAe,CAAC,4BAGpB,6BAEA,kBAAC,gBAAD,CACIF,MAAM,MACNnE,SAAU4C,KAAK3C,aACfE,KAAK,cACLwC,MAAOC,KAAKnC,MAAMG,YAAYU,YAC9B8C,WAAY,CAAC,WAAW,cAAe,gBAAiB,wBACxDC,cAAe,CAAC,yBAA0B,2BAE9C,6BACA,6BACA,mDACA,4BACI1B,MAAOC,KAAKnC,MAAMG,YAAYuB,WAC9BnC,SAAU4C,KAAK3C,aACfE,KAAK,cAEL,4BAAQwC,MAAM,IAAd,oBACA,4BAAQA,MAAM,KAAd,UACA,4BAAQA,MAAM,KAAd,WACA,4BAAQA,MAAM,OAAd,kBAEJ,6BAGA,kBAAC,gBAAD,CACIwB,MAAM,kBACNnE,SAAU4C,KAAK3C,aACfE,KAAK,kBACLwC,MAAOC,KAAKnC,MAAMG,YAAYa,gBAC9B2C,WAAY,CAAC,WAAY,cAAe,eAAgB,wBACxDC,cAAe,CAAC,yBAAyB,uBAAuB,uBAAuB,2BAG/F,kBAAC,OAAD,CAAMH,IAAK,GACP,0CAECV,EAGD,kBAAC,gBAAD,CACIW,MAAM,iBACNnE,SAAU4C,KAAK3C,aACfE,KAAK,gBACLwC,MAAOC,KAAKnC,MAAMG,YAAYyB,gBAGlC,8BAEJ,kBAAC,OAAD,CAAM6B,IAAO,GAET,sCACA,kBAAC,gBAAD,CACIC,MAAM,WACNnE,SAAU4C,KAAK3C,aACfE,KAAK,WACLwC,MAAOC,KAAKnC,MAAMG,YAAYe,SAC9ByC,WAAY,CAAC,WAAY,cAAe,gBAAiB,wBACzDC,cAAe,CAAC,yBAAyB,2BAE7C,6BACA,kBAAC,gBAAD,CACIF,MAAM,YACNnE,SAAU4C,KAAK3C,aACfE,KAAK,YACLwC,MAAOC,KAAKnC,MAAMG,YAAYgB,UAC9BwC,WAAY,CAAC,WAAY,cAAe,gBAAiB,wBACzDC,cAAe,CAAC,yBAAyB,2BAE7C,6BACA,kBAAC,gBAAD,CACIF,MAAM,aACNnE,SAAY4C,KAAK3C,aACjBE,KAAK,aACLwC,MAAOC,KAAKnC,MAAMG,YAAYc,WAC9B0C,WAAY,CAAC,WAAY,cAAe,gBAAiB,wBACzDC,cAAe,CAAC,yBAAyB,2BAE7C,6BACA,kBAAC,gBAAD,CACIF,MAAM,qBACNnE,SAAU4C,KAAK3C,aACfE,KAAK,YACLwC,MAAOC,KAAKnC,MAAMG,YAAYiB,UAC9BuC,WAAY,CAAC,aAAc,YAC3BC,cAAe,CAAC,uCAAwC,8BAIpE,6BAEA,6BACA,kBAACC,EAAA,EAAD,CAAQzE,KAAK,SAASR,MAAO,CACzBqE,gBAAiB,OACjBpE,MAAM,UAFV,UAIA,6BACA,kC,GAnSYiF,IAAM7E,W,uqBCK5B8E,E,iLAGA,OACI,6BACE,kBAACC,EAAD,W,GALe/E,aAW3B,SAASgF,EAAS9E,GAAQ,IAChB+E,EAAqC/E,EAArC+E,SAAUhC,EAA2B/C,EAA3B+C,MAAOQ,EAAoBvD,EAApBuD,MAAUyB,EADZ,YACsBhF,EADtB,8BAGvB,OACI,kBAACiF,EAAA,EAAD,eACIC,UAAU,MACVC,KAAK,WACLC,OAAQrC,IAAUQ,EAClBjD,GAAE,0BAAqBiD,GACvB8B,kBAAA,qBAA+B9B,IAC3ByB,GAEN,kBAACM,EAAA,EAAD,CAAKC,EAAG,GAAIR,IAWpB,SAASS,EAAUjC,GACjB,MAAO,CACLjD,GAAG,cAAD,OAAgBiD,GAClB,gBAAgB,mBAAhB,OAAoCA,IAIxC,IAAMkC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,OAAO,CACLC,WAAY,cAIhB,SAASlB,IACP,IAAMmB,EAAUP,IADI,EAEMd,IAAMsB,SAAS,GAFrB,mBAEblD,EAFa,KAENmD,EAFM,KAQpB,OACI,yBAAK1G,UAAWwG,EAAQJ,MACtB,kBAACO,EAAA,EAAD,CAAQ3G,UAAWwG,EAAQF,OAAQM,SAAS,UAC1C,kBAACC,EAAA,EAAD,CAAMtD,MAAOA,EAAO3C,SAPP,SAACsD,EAAO4C,GAC3BJ,EAASI,IAMyCC,aAAW,uBACrD,kBAACC,EAAA,EAAD,eAAKjC,MAAM,YAAeiB,EAAU,KACpC,kBAACgB,EAAA,EAAD,eAAKjC,MAAM,SAAYiB,EAAU,OAGrC,kBAACV,EAAD,CAAU/B,MAAOA,EAAOQ,MAAO,GAC7B,kBAACkD,EAAD,OAEF,kBAAC3B,EAAD,CAAU/B,MAAOA,EAAOQ,MAAO,GAC7B,kBAACmD,EAAD,QAMV,SAASD,IAAgB,IAAD,EACM9B,IAAMsB,SAAS,CACvCU,QAAS,CACP,CAAEC,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,aAAcC,MAAO,YAAa5G,KAAM,WACjD,CAAE2G,MAAO,YAAaC,MAAO,KAAM5G,KAAM,aAE3CqB,KAAM,CACJ,CAAEf,KAAM,MACNuG,QAAS,SACTC,IAAK,IACLC,UAAW,KACX1G,GAAI,QACN,CACEC,KAAM,UACNuG,QAAS,aACTC,IAAK,IACLC,UAAW,KACX1G,GAAI,QAEN,CACEC,KAAM,SACNuG,QAAS,QACTC,IAAK,IACLC,UAAW,KACX1G,GAAI,QAEN,CACEC,KAAM,UACNuG,QAAS,SACTC,IAAK,IACLC,UAAW,KACX1G,GAAI,WAlCU,mBACbO,EADa,KACNoC,EADM,KAuCpB,OACE,yBAAKzD,UAAY,kBACjB,kBAAC,IAAD,CACEoH,MAAM,WACND,QAAS9F,EAAM8F,QACfrF,KAAMT,EAAMS,KACZ2F,SAAU,CACRC,YAAa,SAACC,EAASC,GAAV,OACX,IAAIC,SAAQ,SAAAC,GACVC,YAAW,WACTD,IACA,IAAMhG,EAAI,YAAOT,EAAMS,MACvBA,EAAKA,EAAKkG,QAAQJ,IAAYD,EAC9BlE,EAAS,EAAD,GAAMpC,EAAN,CAAaS,YACpB,SAEPmG,YAAa,SAAAL,GAAO,OAClB,IAAIC,SAAQ,SAAAC,GACVC,YAAW,WACTD,IACA,IAAMhG,EAAI,YAAOT,EAAMS,MACvBA,EAAKoG,OAAOpG,EAAKkG,QAAQJ,GAAU,GACnCnE,EAAS,EAAD,GAAMpC,EAAN,CAAaS,YACpB,SAGPqG,SAAU,SAAAR,GAAO,OACb,IAAIE,SAAQ,SAACC,EAASM,GACpBL,YAAW,WAEP,IAAMjG,EAAI,YAAOT,EAAMS,MACvBA,EAAKF,KAAK+F,GACVlE,EAAS,EAAD,GAAMpC,EAAN,CAAaS,UAEvBgG,MACC,UAKbO,QAAS,CACP,CAEEC,KAAM,aACNC,QAAS,QACTC,QAAS,WAEPC,OAAOC,KAAK,sBAAsB,cAClC,0IASZ,SAASxB,IAAa,IAAD,EACO/B,IAAMsB,SAAS,CACvCU,QAAS,CACP,CAAEC,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,OAAQC,MAAO,OAAQ5G,KAAM,SACtC,CAAE2G,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,aAAcC,MAAO,YAAa5G,KAAM,WACjD,CAAE2G,MAAO,YAAaC,MAAO,KAAM5G,KAAM,aAE3CqB,KAAM,CACJ,CACE6G,SAAU,gBACVC,SAAU,YACVjD,KAAM,CAAC,QACP5E,KAAM,MACNuG,QAAS,SACTC,IAAK,IACLC,UAAW,KACX1G,GAAI,QACN,CACE6H,SAAU,oBACVC,SAAU,YACVjD,KAAM,CAAC,OAAO,sBACd5E,KAAM,UACNuG,QAAS,aACTC,IAAK,IACLC,UAAW,KACX1G,GAAI,QAEN,CACE6H,SAAU,eACVC,SAAU,YACVjD,KAAM,CAAC,OAAQ,qBAAsB,OACrC5E,KAAM,SACNuG,QAAS,QACTC,IAAK,IACLC,UAAW,KACX1G,GAAI,QAEN,CACE6H,SAAU,gBACVC,SAAU,YACVjD,KAAM,CAAC,OAAO,QACd5E,KAAM,UACNuG,QAAS,SACTC,IAAK,IACLC,UAAW,KACX1G,GAAI,WAlDS,mBACZO,EADY,KACLoC,EADK,KAuDnB,OACI,yBAAKzD,UAAY,kBACf,kBAAC,IAAD,CACIoH,MAAM,SACND,QAAS9F,EAAM8F,QACfrF,KAAMT,EAAMS,KACZ2F,SAAU,CACRC,YAAa,SAACC,EAASC,GAAV,OACT,IAAIC,SAAQ,SAAAC,GACVC,YAAW,WACTD,IACA,IAAMhG,EAAI,YAAOT,EAAMS,MACvBA,EAAKA,EAAKkG,QAAQJ,IAAYD,EAC9BlE,EAAS,EAAD,GAAMpC,EAAN,CAAaS,YACpB,SAETmG,YAAa,SAAAL,GAAO,OAChB,IAAIC,SAAQ,SAAAC,GACVC,YAAW,WACTD,IACA,IAAMhG,EAAI,YAAOT,EAAMS,MACvBA,EAAKoG,OAAOpG,EAAKkG,QAAQJ,GAAU,GACnCnE,EAAS,EAAD,GAAMpC,EAAN,CAAaS,YACpB,SAETqG,SAAU,SAAAR,GAAO,OACb,IAAIE,SAAQ,SAACC,EAASM,GACpBL,YAAW,WAEP,IAAMjG,EAAI,YAAOT,EAAMS,MACvBA,EAAKF,KAAK+F,GACVlE,EAAS,EAAD,GAAMpC,EAAN,CAAaS,UAEvBgG,MACC,UAKXO,QAAS,CACP,CAEEC,KAAM,aACNC,QAAS,QACTC,QAAS,WAEPC,OAAOC,KAAK,sBAAsB,cAC9B,0IAaPtD,Q,8DCjSTyD,G,YACJ,WAAYrI,GAAO,IAAD,8BAChB,4CAAMA,KA4DRsI,aAAe,SAAAC,GACbA,EAAEC,iBAEF1H,IAAMC,KAAK,oCAAqC,EAAKF,OAChDI,MAAK,SAAAC,GACFuH,aAAaC,QAAQ,aAAc,QACnC,EAAKC,YAAYzH,GACjB,EAAK0H,eAAe1H,GACpB,EAAK2H,QAAQ3H,GACb,EAAK4H,SAAS5H,MAEjBK,OAAM,SAAAC,GACHb,QAAQC,IAAI,eACZD,QAAQC,IAAIY,GACZ,EAAKyB,SAAS,CACZzB,OAAO,EACPuH,SAAU,sBA3EpB,EAAKlI,MAAM,CACTsH,SAAS,GACTC,SAAS,GACT9H,GAAI,GACJkB,OAAO,EACPuH,SAAU,GACVC,SAAS,EACTC,QAAQ,GATM,E,yEAaN/H,GACV8B,KAAKC,SAAS,CACZ3C,GAAIY,EAASI,KAAKf,S,8BAIdW,GAAW,IAAD,OAChBA,EAASI,KAAK4H,MAAMC,SAAS,SAAAhE,GAE3BxE,QAAQC,IAAI,uBAAwBuE,GACpCxE,QAAQC,IAAI,uBAAwBuE,EAAKA,MAExB,SAAbA,EAAKA,OACPxE,QAAQC,IAAI,YACZ,EAAKqC,SAAS,CACZ+F,SAAS,KAII,QAAb7D,EAAKA,OACPxE,QAAQC,IAAI,WACZ,EAAKqC,SAAS,CACZgG,QAAQ,U,+BAOP/H,GACH8B,KAAKnC,MAAMmI,QACbhG,KAAKhD,MAAMmB,QAAQC,KACjB,mBACA,CAAEC,OAAQH,EAASI,OAGrB0B,KAAKhD,MAAMmB,QAAQC,KACjB,kBACA,CAAEC,OAAQH,EAASI,S,qCAKVJ,GACbP,QAAQC,IAAI,yBAA0BM,EAAU8B,KAAKnC,OACrDF,QAAQC,IAAI,yBAA0BM,EAASI,KAAKhB,GAAI,IAAKY,EAASI,KAAKf,KAAMW,EAASkI,U,qCAyB1F,OAAO,2BAAIpG,KAAKnC,MAAMkI,Y,+BAGd,IAAD,OAEL,OACE,6BACE,kBAAC,IAAD,KACE,yBAAKvJ,UAAU,cACf,wBAAIC,MAAS,CAACC,MAAQ,UAAtB,kBACA,kBAAC,IAAD,CACE2J,SAAS,sBACTC,WAAYC,GAAOC,MACnBC,kBAAkB,WAClBC,UAAWH,GAAOI,KAClBC,mBAAoBL,GAAOM,MAC3BzJ,SAAY,SAACsD,EAAM4C,GAAP,OAAoB,EAAKrD,SAAS,CAACkF,SAAS7B,OAE1D,6BACE,kBAAC,IAAD,CACErG,KAAK,WACLoJ,SAAS,sBACTC,WAAYC,GAAOC,MACnBE,UAAWH,GAAOI,KAClBF,kBAAkB,WAClBG,mBAAoBL,GAAOM,MAC3BzJ,SAAY,SAACsD,EAAM4C,GAAP,OAAoB,EAAKrD,SAAS,CAACmF,SAAS9B,OAE1D,6BACA,yBAAK9G,UAAU,YACXwD,KAAKnC,MAAMW,MAAQwB,KAAK8G,eAAiB,IAE7C,kBAAC,IAAD,CAAcvF,MAAM,SAASwF,SAAS,EAAMtK,MAAO8J,GAAOS,OAAQhC,QAAS,SAACtE,GAAD,OAAW,EAAK4E,aAAa5E,a,GApHlG5D,aA6HdyJ,GAAS,CACb,OAAU,CACRxF,OAAQ,IAEV,MAAS,CACPkG,aAAc,WACdC,WAAY,SACZC,SAAU,SACVC,MAAO,OACP1K,MAAO,SAET,MAAS,CACPA,MAAO,SAET,KAAQ,CACNA,MAAO,SAII2I,M,UCnJTgC,I,mBACJ,WAAYrK,GAAO,IAAD,8BAChB,4CAAMA,KAgERsK,gBAAkB,SAAA/B,GAChBA,EAAEC,iBAEF,IAAI+B,EAAgB,EAAKC,qBACrBC,EAAa,EAAKC,eAEjBH,IAEDE,IAEJ9J,QAAQC,IAAI,yCAA0C,EAAKC,OAE3DC,IAAMC,KAAK,uCAAwC,EAAKF,OACnDI,MAAK,SAAAC,GACFyJ,aAAM,cACN,EAAKC,iBAERrJ,OAAM,SAAAC,GACHb,QAAQC,IAAI,eACZD,QAAQC,IAAIY,GACZ,EAAKyB,SAAS,CACZzB,OAAO,EACPuH,SAAU,6BArFpB,EAAKlI,MAAM,CACTP,GAAI,GACJC,KAAK,GACLsK,QAAS,GACTC,IAAK,GACLC,OAAQ,GACR5C,SAAS,GACTC,SAAS,GACT4C,gBAAgB,GAChBxJ,OAAO,EACPuH,SAAU,GACVkC,eAAe,GAbD,E,kFAiBI,IAAD,OACnB,MAAmC,KAA/BjI,KAAKnC,MAAMuH,SAAS8C,QAAiBlI,KAAKnC,MAAMuH,UAAYpF,KAAKnC,MAAMmK,kBACvErK,QAAQC,IAAI,wBACZoC,KAAKC,SAAS,CACVzB,OAAO,EACPuH,SAAU,2BACX,WAAOpI,QAAQC,IAAI,EAAKC,MAAMuH,SAAU,EAAKvH,MAAMmK,qBAC/C,K,qCAKE9J,GACbP,QAAQC,IAAI,yBAA0BM,EAAU8B,KAAKnC,OACrDF,QAAQC,IAAI,yBAA0BM,EAASI,KAAKhB,GAAI,IAAKY,EAASI,KAAKf,KAAMW,EAASkI,U,oCAI1FpG,KAAKC,SAAS,CACV3C,GAAI,GACJC,KAAK,GACLsK,QAAS,GACTC,IAAK,GACLC,OAAQ,GACR5C,SAAS,GACTC,SAAS,GACT4C,gBAAgB,GAChBxJ,OAAO,EACPuH,SAAU,GACVkC,eAAe,IAChB,WAAQE,SAASC,eAAe,iBAAiBC,a,qCAKpD,MAAsB,KAAlBrI,KAAKnC,MAAMP,IAAiC,KAApB0C,KAAKnC,MAAMN,OAGZ,KAAvByC,KAAKnC,MAAMgK,SAAwC,KAAtB7H,KAAKnC,MAAMkK,SAGrB,KAAnB/H,KAAKnC,MAAMiK,KAAsC,KAAxB9H,KAAKnC,MAAMsH,a,qCAmCxC,OAAO,2BAAInF,KAAKnC,MAAMkI,Y,mCAGXR,GAAI,IAAD,OACd5H,QAAQC,IAAI2H,EAAE5E,QACd,IAAIA,EAAS4E,EAAE5E,OAAOpD,KAClBwC,EAAQwF,EAAE5E,OAAOZ,MAErBC,KAAKC,SAAL,eACGU,EAASZ,IACT,WAAOpC,QAAQC,IAAI,oBAAqB,EAAKC,MAAMkK,a,uCAGvChI,GAAQ,IAAD,OAEtBC,KAAKC,SAAS,CACZ6H,IAAK/H,IACJ,WAAOpC,QAAQC,IAAI,gBAAiB,EAAKC,Y,+BAIpC,IAAD,OAGL,OAFJ8J,KAAMW,YAGA,6BACE,kBAAC,IAAD,KACE,yBAAK9L,UAAU,cACb,0BAAMc,GAAG,iBACP,kBAAC,IAAD,CACE+I,SAAS,uBACTC,WAAYC,GAAOC,MACnBC,kBAAkB,YAClBC,UAAWH,GAAOI,KAClBC,mBAAoBL,GAAOM,MAC3BzJ,SAAY,SAACsD,EAAM4C,GAAP,OAAoB,EAAKrD,SAAS,CAAC3C,GAAGgG,OAEpD,6BACA,kBAAC,IAAD,CACE+C,SAAS,kBACTC,WAAYC,GAAOC,MACnBC,kBAAkB,OAClBC,UAAWH,GAAOI,KAClBC,mBAAoBL,GAAOM,MAC3BzJ,SAAY,SAACsD,EAAM4C,GAAP,OAAoB,EAAKrD,SAAS,CAAC1C,KAAK+F,OAEtD,6BACA,kBAAC,IAAD,CACE+C,SAAS,UACTC,WAAYC,GAAOC,MACnBC,kBAAkB,UAClBC,UAAWH,GAAOI,KAClBC,mBAAoBL,GAAOM,MAC3BzJ,SAAY,SAACsD,EAAM4C,GAAP,OAAoB,EAAKrD,SAAS,CAAC4H,QAAQvE,OAEzD,6BACA,kBAAC,IAAD,CACE+C,SAAS,sBACTC,WAAYC,GAAOC,MACnBC,kBAAkB,WAClBC,UAAWH,GAAOI,KAClBC,mBAAoBL,GAAOM,MAC3BzJ,SAAY,SAACsD,EAAM4C,GAAP,OAAoB,EAAKrD,SAAS,CAACkF,SAAS7B,OAE1D,6BACE,kBAAC,IAAD,CACErG,KAAK,WACLoJ,SAAS,sBACTC,WAAYC,GAAOC,MACnBE,UAAWH,GAAOI,KAClBF,kBAAkB,WAClBG,mBAAoBL,GAAOM,MAC3BzJ,SAAY,SAACsD,EAAM4C,GAAP,OAAoB,EAAKrD,SAAS,CAACmF,SAAS9B,OAE1D,6BACA,kBAAC,IAAD,CACErG,KAAK,WACLoJ,SAAS,uBACTC,WAAYC,GAAOC,MACnBE,UAAWH,GAAOI,KAClBF,kBAAkB,uBAClBG,mBAAoBL,GAAOM,MAC3BzJ,SAAY,SAACsD,EAAM4C,GAAP,OAAoB,EAAKrD,SAAS,CAAC+H,gBAAgB1E,OAEjE,6BACA,kBAAC,IAAD,CACE+C,SAAS,eACTC,WAAYC,GAAOC,MACnBC,kBAAkB,6BAClBC,UAAWH,GAAOI,KAClBC,mBAAoBL,GAAOM,MAC3BzJ,SAAY,SAACsD,EAAM4C,GAAP,OAAoB,EAAKrD,SAAS,CAAC6H,IAAIxE,OAErD,6BACA,6BAEA,2BAAOrG,KAAK,QAAQ8C,MAAM,OAAOxC,KAAK,SAASL,QAA+B,SAAtB8C,KAAKnC,MAAMkK,OAAmB3K,SAAY,SAACmI,GAAD,OAAO,EAAKgD,aAAahD,MApE/H,QAqEI,2BAAOtI,KAAK,QAAQ8C,MAAM,SAASxC,KAAK,SAASL,QAA+B,WAAtB8C,KAAKnC,MAAMkK,OAAqB3K,SAAY,SAACmI,GAAD,OAAO,EAAKgD,aAAahD,MArEnI,UAuEI,yBAAK/I,UAAU,YACXwD,KAAKnC,MAAMW,MAAQwB,KAAK8G,eAAiB,IAG7C,kBAAC,KAAD,CAAgB1D,SAAUuE,KAAMa,SAASC,eACzC,kBAAC,IAAD,CAAcC,QAAS1I,KAAKnC,MAAMoK,cAAe1G,MAAM,WAAWwF,SAAS,EAAMtK,MAAO8J,GAAOS,OAAQhC,QAAS,SAACtE,GAAD,OAAW,EAAK4G,gBAAgB5G,c,GAtM3I5D,cAiNjByJ,GAAS,CACb,OAAU,CACRxF,OAAQ,IAEV,MAAS,CACPkG,aAAc,WACdC,WAAY,SACZC,SAAU,SACVC,MAAO,OACP1K,MAAO,SAET,MAAS,CACPA,MAAO,SAET,KAAQ,CACNA,MAAO,SAII2K,M,6BCnLAsB,G,2MArDb9K,MAAQ,CACN+K,SAAU,CACRC,OAAQ,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACvHC,SAAU,CACR,CACEvH,MAAO,WACPwH,MAAM,EACNjI,gBAAiB,0BACjBkI,YAAa,MACb1K,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAErD,CACEiD,MAAO,YACPwH,MAAM,EACNjI,gBAAiB,yBACjBkI,YAAa,OACb1K,KAAM,CAAC,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEtD,CAACiD,MAAO,aACNwH,MAAM,EACNjI,gBAAiB,0BACjBkI,YAAa,QACb1K,KAAM,CAAC,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,QAI3D2K,QAAS,CACPC,OAAO,CACLL,OAAO,CACLM,UAAW,UAGfC,OAAO,CACLC,MAAM,CAAC,CACLC,MAAM,CACJH,UAAW,QACXI,SAAU,S,wEAQlB,OACE,kBAAC,KAAD,KACE,wBAAI/M,UAAU,QAAd,kBACA,kBAAC,KAAD,CAAM8B,KAAM0B,KAAKnC,MAAM+K,SAAUK,QAAS,CAAEO,YAAY,U,GAhDrC7H,IAAM7E,W,ikBCsKlB2M,G,YAjKb,WAAYzM,GAAO,IAAD,8BAChB,4CAAMA,KACDa,MAAM,CACT8F,QAAS,GACTrF,KAAM,IAJQ,E,iFAShB0B,KAAK0J,iBACL1J,KAAKC,SAAS,CACZ0D,QAAS,CACP,CAAEC,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,MAAOC,MAAO,OACvB,CAAED,MAAO,aAAcC,MAAO,aAC9B,CAAED,MAAO,YAAaC,MAAO,OAE/BvF,KAAM,CACJ,CACEf,KAAM,MACNuG,QAAS,SACTC,IAAK,IACLC,UAAW,KACX1G,GAAI,QACN,CACEC,KAAM,UACNuG,QAAS,aACTC,IAAK,IACLC,UAAW,KACX1G,GAAI,QAEN,CACEC,KAAM,SACNuG,QAAS,QACTC,IAAK,IACLC,UAAW,KACX1G,GAAI,QAEN,CACEC,KAAM,UACNuG,QAAS,SACTC,IAAK,IACLC,UAAW,KACX1G,GAAI,a,mCAOCY,GACXP,QAAQC,IAAIM,GACZ,IAAIyL,EAAc,GAClBzL,EAASiI,SAAQ,SAAAyD,GAOXA,EAAU,CACZrM,KAPUqM,EAAQrM,KAAKsM,MAAM,KAAM,GAQnC/F,QAPa8F,EAAQrM,KAAKsM,MAAM,KAAM,GAQtCC,UAPcF,EAAQG,WAQtBhG,IAPQ6F,EAAQ7B,OAAO,GAQvBzK,GAPOsM,EAAQtM,IAUjBqM,EAAYvL,KAAKwL,MAGnB5J,KAAKC,SAAS,CAAC3B,KAAMqL,M,uCAIL,IAAD,OACf7L,IAAMkM,IAAI,qCAAsChK,KAAKnC,OAClDI,MAAK,SAAAC,GAEJ,EAAK+L,aAAa/L,EAASI,SAE5BC,OAAM,SAAAC,GACHb,QAAQC,IAAI,eACZD,QAAQC,IAAIY,GACZ,EAAKyB,SAAS,CACZzB,OAAO,EACPuH,SAAU,uB,+BAKZ,IAAD,OACP,OAEE,yBAAKvJ,UAAY,kBACjB,kBAAC,IAAD,CACEoH,MAAM,WACND,QAAS3D,KAAKnC,MAAM8F,QACpBrF,KAAM0B,KAAKnC,MAAMS,KACjB2F,SAAU,CACRC,YAAa,SAACC,EAASC,GAAV,OACX,IAAIC,SAAQ,SAAAC,GACVC,YAAW,WACTD,IACA,IAAMhG,EAAI,YAAO,EAAKT,MAAMS,MAC5BA,EAAKA,EAAKkG,QAAQJ,IAAYD,EAC9B,EAAKlE,SAAL,MAAmB,EAAKpC,MAAxB,CAA+BS,YAC9B,SAEPmG,YAAa,SAAAL,GAAO,OAClB,IAAIC,SAAQ,SAAAC,GACVC,YAAW,WACTD,IACA,IAAMhG,EAAI,YAAO,EAAKT,MAAMS,MAC5BA,EAAKoG,OAAOpG,EAAKkG,QAAQJ,GAAU,GACnC,EAAKnE,SAAL,MAAmB,EAAKpC,MAAxB,CAA+BS,YAC9B,SAEPqG,SAAU,SAAAR,GAAO,OACb,IAAIE,SAAQ,SAACC,EAASM,GACpBL,YAAW,WAEP,IAAMjG,EAAI,YAAO,EAAKT,MAAMS,MAC5BA,EAAKF,KAAK+F,GACV,EAAKlE,SAAL,MAAmB,EAAKpC,MAAxB,CAA+BS,UAEjCgG,MACC,UAUfO,QAAS,CACP,CAEEC,KAAM,aACNC,QAAS,QACTC,QAAS,WAEPC,OAAOC,KAAK,iC,GAnJMpI,a,wkBCyJXoN,G,YAxJb,WAAYlN,GAAO,IAAD,8BAChB,4CAAMA,KACDa,MAAM,CACT8F,QAAS,GACTrF,KAAM,IAJQ,E,iFAShB0B,KAAKmK,oBACLnK,KAAKC,SAAS,CACZ0D,QAAS,CACP,CAAEC,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,cAAeC,MAAO,eAC/B,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,kBAAmBC,MAAO,mBACnC,CAAED,MAAO,aAAcC,MAAO,cAC9B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,sBAAuBC,MAAO,aACvC,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,YAAaC,MAAO,YAC7B,CAAED,MAAO,aAAcC,MAAO,aAC9B,CAAED,MAAO,iBAAkBC,MAAO,kBAClC,CAAED,MAAO,WAAYC,MAAO,WAC5B,CAAED,MAAO,YAAaC,MAAO,OAE/BvF,KAAM,CACJ,CACEG,WAAY,MACZC,YAAa,SACbC,OAAQ,OACRC,KAAM,qB,mCAMDV,GACXP,QAAQC,IAAIM,GACZ,IAAIkM,EAAiB,GACrBlM,EAASiI,SAAQ,SAAAkE,GACf,IAAI5L,EAAa4L,EAAW5L,WACxBC,EAAc2L,EAAW3L,YACzBC,EAAS0L,EAAW1L,OACpBC,EAAOyL,EAAWzL,KAClBC,EAAkBwL,EAAWxL,gBAC7BC,EAAauL,EAAWvL,WACxBC,EAAWsL,EAAWtL,SACtBC,EAAYqL,EAAWrL,UACvBC,EAAYoL,EAAWpL,UACvBC,EAAWmL,EAAWnL,SACtBC,EAAWkL,EAAWlL,SACtBC,EAAYiL,EAAWjL,UACvBC,EAAiBgL,EAAWhL,eAC5BC,EAAU+K,EAAW/K,QACrBhC,EAAM+M,EAAWC,IAEjBC,EAAiB,CACnB9L,WAAYA,EACZC,YAAaA,EACbC,OAAQA,EACRC,KAAMA,EACNC,gBAAiBA,EACjBC,WAAYA,EACZC,SAAUA,EACVC,UAAWA,EACXC,UAAWA,EACXC,SAAUA,EACVC,SAAUA,EAASqL,WACnBpL,UAAWA,EAAUoL,WACrBnL,eAAiBA,EACjBC,QAASA,EAAQkL,WACjBlN,GAAKA,GAGP8M,EAAehM,KAAKmM,MAGtBvK,KAAKC,SAAS,CAAC3B,KAAM8L,M,0CAIF,IAAD,OAClBtM,IAAMkM,IAAI,wCAAyChK,KAAKnC,OACrDI,MAAK,SAAAC,GAEJ,EAAK+L,aAAa/L,EAASI,SAE5BC,OAAM,SAAAC,GACHb,QAAQC,IAAI,eACZD,QAAQC,IAAIY,GACZ,EAAKyB,SAAS,CACZzB,OAAO,EACPuH,SAAU,uB,+BAKZ,IAAD,OACP,OAEE,yBAAKvJ,UAAY,kBAEf,kBAAC,IAAD,CACEoH,MAAM,kBACND,QAAS3D,KAAKnC,MAAM8F,QACpBrF,KAAM0B,KAAKnC,MAAMS,KACjB2F,SAAU,CACRC,YAAa,SAACC,EAASC,GAAV,OACX,IAAIC,SAAQ,SAAAC,GACVC,YAAW,WACTD,IACA,IAAMhG,EAAI,YAAO,EAAKT,MAAMS,MAC5BA,EAAKA,EAAKkG,QAAQJ,IAAYD,EAC9B,EAAKlE,SAAL,MAAmB,EAAKpC,MAAxB,CAA+BS,YAC9B,SAEPmG,YAAa,SAAAL,GAAO,OAClB,IAAIC,SAAQ,SAAAC,GACVC,YAAW,WACTD,IACA,IAAMhG,EAAI,YAAO,EAAKT,MAAMS,MAC5BA,EAAKoG,OAAOpG,EAAKkG,QAAQJ,GAAU,GACnC,EAAKnE,SAAL,MAAmB,EAAKpC,MAAxB,CAA+BS,YAC9B,UAITuG,QAAS,CACP,CAEEC,KAAM,aACNC,QAAS,QACTC,QAAS,WAEPC,OAAOC,KAAK,iC,GA1IGpI,aC4B7B,SAAS2N,GAAT,GAAiE,IAA9B3N,EAA6B,EAAxCoF,UAAiCwI,GAAO,EAAlBC,OAAkB,uCAC9D,OACE,kBAAC,IAAD,iBAAWD,EAAX,CAAiBE,OAAQ,SAAC5N,GAAD,MACgB,SAAvCyI,aAAaoF,QAAQ,cACjB,kBAAC/N,EAAcE,GACf,kBAAC,IAAD,CAAU8N,GAAI,CACZC,SAAU,SACVlN,MAAO,CAAEmN,KAAMhO,EAAMiO,iBAOlBC,OApCI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAO,IAAIlJ,UAAa3F,IAKrC,kBAAC,IAAD,CAAO4O,OAAK,EAACC,KAAO,kBAAkBlJ,UAAauH,KACnD,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAO,mBAAmBlJ,UAAaN,IACpD,kBAAC,IAAD,CAAOuJ,OAAK,EAACC,KAAO,SAASlJ,UAAamD,KAC1C,kBAACoF,GAAD,CAAcU,OAAK,EAACC,KAAO,YAAYlJ,UAAamF,KACpD,kBAAC,IAAD,CAAO8D,OAAK,EAACC,KAAO,wBAAwBlJ,UAAagI,KACzD,kBAAC,IAAD,CAAOkB,KAAO,SAASlJ,UAAamD,KACpC,kBAAC,IAAD,CAAO+F,KAAO,uBAAuBlJ,UAAaN,IAClD,kBAAC,IAAD,CAAOwJ,KAAO,qBAAqBlJ,UAAauH,KAChD,kBAAC,IAAD,CAAO2B,KAAO,sBAAsBlJ,UAAayG,KACjD,kBAAC,IAAD,CAAOyC,KAAO,cAAclJ,UAAamJ,MCc9BC,G,iLA7BX,OACE,yBAAK9O,UAAU,oBACX,kBAAC,SAAD,CAAQ+O,aAAW,GACf,kBAAC,SAAD,CAAQ/O,UAAY,eAAeoH,MAAM,SAAS4H,aAAW,EAACC,QAAM,EAACC,WAAS,EAACC,QAAM,GACjF,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMb,GAAI,KAAV,QACA,kBAAC,IAAD,CAAMA,GAAI,wBAAV,sBACA,kBAAC,IAAD,CAAMA,GAAI,sBAAV,gBACA,kBAAC,IAAD,CAAMA,GAAI,yBAAV,oBACA,kBAAC,IAAD,CAAMA,GAAI,uBAAV,mBAGR,kBAAC,SAAD,CAAQlH,MAAM,UACV,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAMkH,GAAI,UAAV,SACA,kBAAC,IAAD,CAAMA,GAAI,eAAV,oBAGR,kBAAC,UAAD,KACI,yBAAKtO,UAAU,iBACf,kBAAC,GAAD,a,GAtBAM,aCCE8O,QACW,cAA7B3G,OAAOgG,SAASY,UAEe,UAA7B5G,OAAOgG,SAASY,UAEhB5G,OAAOgG,SAASY,SAASC,MACvB,2D,cCTNC,IAASnB,OACL,kBAAC,IAAD,KACA,kBAAC,GAAD,OAEAzC,SAASC,eAAe,SDoHtB,kBAAmB4D,WACrBA,UAAUC,cAAcC,MAAMjO,MAAK,SAAAkO,GACjCA,EAAaC,kB","file":"static/js/main.d2c3ec86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart1.202a12d3.svg\";","module.exports = __webpack_public_path__ + \"static/media/report.d50fe931.svg\";","// All the rest of the content of the landing page is coming from \nimport React, {Component} from 'react';\nimport {List, ListItem} from 'react-mdl';\nimport heart from '../heart1.svg';\nimport report from '../report.svg';\nimport axios from 'axios';\n\nimport '../App.css';\n\nclass LandingPage extends Component {\n    /*constructor(props) {\n        super(props)\n\n        this.state = {\n            id : '',\n            name : '',\n            salary : '',\n            username: '',\n            password: '',\n        }\n    }\n\n    changeHandler = (e) => {\n        this.setState({ [e.target.name] : e.target.value })\n    }\n\n    submitHandler = e => {\n        e.preventDefault()\n        console.log(this.state)\n        axios.post('http://localhost:8080/users/add', this.state)\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n    }*/\n\n/*   componentDidMount() {\n    setInterval(this.hello, 250);\n}\n\nhello = () => {\n    fetch('/')\n        .then(response => response.text())\n        .then(message => {\n            this.setState({message: message});\n        });\n}; */\n\n  render() {\n       {/* const {id,name,salary} = this.state */}\n      return (\n          <div className=\"landing-form\">\n                <h1 style = {{color : \"white\"}}> Welcome to CRADLE</h1>\n                <p style = {{ color : \"white\"}}>Our platform provides gestational monitoring for pregnant woman</p>\n                <img src={heart} alt=\"logo\"/>\n          </div>\n      );\n  }\n}\n\n//Class Component\nclass FirstComponent extends Component {\n  render() {\n    return (\n      <div className = \"first-component\">\n        My Cradle\n      </div>\n    );\n  }\n}\n\n//Class Component\nclass SecondComponent extends Component {\n  render() {\n    return (\n      <div className = \"second-component\">\n        <List>\n            <ListItem>Bryan Cranston</ListItem>\n            <ListItem>Aaron Paul</ListItem>\n            <ListItem>Bob Odenkirk</ListItem>\n        </List> \n      </div>\n\n    );\n  }\n}\n\n//Function Component\nfunction ThirdComponent() {\n  return (\n    <div className = \"third-component\">\n        This is third component\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from \"react\"\n\nfunction SymptomsForm(props) {\n    return(\n        <div className = \"sypmtoms\">\n            <p style={{ color: 'grey' }}>\n            <input\n                type = \"checkbox\"\n                checked = {props.item.checked}\n                onChange={() => props.handleChange(props.item.id)}\n            />\n            {props.item.name}</p>\n        </div>\n    )\n}\nexport default SymptomsForm","\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\nimport axios from 'axios';\nimport ShowSymp from \"./SymptomsForm\";\nimport { Grid, Cell } from 'react-mdl';\n\n\nclass NewAssessment extends React.Component {\n\n    constructor(){\n        super()\n        this.state = {\n            assessments : {\n                //use get method to get the assessment id <- should be equal to # of assessments + 1\n                id: '',\n                patient_id: \"\",\n                patient_age: \"\",\n                vht_id : null,\n                date: \"\",\n                gestational_age: \"\",\n                heart_rate: \"\",\n                systolic: \"\",\n                diastolic: \"\",\n                ews_color: \"\",\n                symptoms: [],\n                referred: false,\n                follow_up: false,\n                follow_up_date: null,\n                recheck: false,\n\n                //Temp\n                time_scale: \"\",\n                initial: \"\",\n                temp_symptoms: \"\",\n                //Symptoms\n                symptoms_arr: [\n                    {id: 1, name: 'No Symptoms (patient healthy)', checked: true},\n                    {id: 2, name: 'Headache', checked: false},\n                    {id: 3, name: 'Blurred vision', checked: false},\n                    {id: 4, name: 'Abdominal pain', checked: false},\n                    {id: 5, name: 'Bleeding', checked: false},\n                    {id: 6, name: 'Feverish', checked: false},\n                    {id: 7, name: 'Unwell', checked: false},\n                ]\n            }\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleCheckbox = this.handleCheckbox.bind(this)\n    }\n\n    // private String patient_id;\n    // private String patient_age;\n    // private String vht_id;\n    // private String date;\n    // private String gestational_age;\n    // private int heart_rate;\n    // private int systolic;\n    // private int diastolic;\n    // private String ews_color;\n    // private String symptoms;\n    // private boolean referred;\n    // private boolean follow_up;\n    // private String follow_up_date;\n    // private boolean recheck;\n    //\n\n\n\n    componentDidMount() {\n        // custom rule will have name 'isValidEWS'\n        ValidatorForm.addValidationRule('isValidEWS', (value) => {\n            if (value === 'green' || value === 'yellow' || value ==='red') {\n                return true;\n            }\n            return false;\n        });\n    }\n\n    // componentWillUnmount() {\n    //     // remove rule when it is not needed\n    //     ValidatorForm.removeValidationRule('isValidEWS');\n    // }\n\n    handleCheckbox(id){\n        this.setState(prevState => {\n            const updatedSymp = prevState.assessments.symptoms_arr.map(each => {\n                if(each.id === id){\n                    each.checked = !each.checked\n                }\n                return each\n            });\n            prevState.assessments.symptoms_arr = updatedSymp;\n            return prevState;\n        })\n        console.log(this.state.assessments.symptoms_arr)\n    }\n\n    addSymptoms(){\n        const symp = this.state.assessments.symptoms_arr;\n        for(var index in symp){\n            if (symp[index].checked){\n                this.state.assessments.symptoms.push(symp[index].name)\n            }\n        }\n    }\n\n    changeType(){\n        this.state.assessments.heart_rate = parseInt(this.state.assessments.heart_rate)\n        this.state.assessments.systolic = parseInt(this.state.assessments.systolic)\n        this.state.assessments.diastolic = parseInt(this.state.assessments.diastolic)\n        if(this.state.assessments.temp_symptoms !== \"\"){\n            this.state.assessments.symptoms.push(this.state.assessments.temp_symptoms)\n        }\n        this.addSymptoms()\n        this.state.assessments.gestational_age += this.state.assessments.time_scale\n        delete this.state.assessments.temp_symptoms;\n        delete this.state.assessments.symptoms_arr;\n        delete this.state.assessments.initial;\n        delete this.state.assessments.time_scale;\n\n\n    }\n\n\n    handleSubmit = () => {\n        this.changeType();\n        console.log(this.state)\n            axios.post('http://localhost:8080/assessments/add', this.state.assessments)\n            .then(response => {\n                console.log(this.state)\n                this.props.history.push(\n                    '/',\n                    { detail: response.data }\n                )\n            })\n            .catch(error => {\n                console.log('error block')\n                console.log(error)\n            })\n\n    }\n\n\n    handleChange(event){\n        const { assessments } = this.state;\n        assessments[event.target.name] = event.target.value;\n        this.setState({ assessments });\n    }\n\n\n\n    render() {\n        const symptom = this.state.assessments.symptoms_arr.map(item => <ShowSymp key = {item.id} item = {item}\n                                                              handleChange = { this.handleCheckbox}/>)\n\n        return (\n            <ValidatorForm\n                style={{\n                    backgroundColor: 'white',\n                    margin : 'auto',\n                    padding : '50px',\n                    textAlign: 'center'\n                    // width: '400px',\n                    // height: '400px'\n                }}\n                ref=\"form\"\n                onSubmit={this.handleSubmit}\n                onError={errors => console.log(errors)}\n            >\n                <Grid>\n                    <Cell col={4}>\n                        <h4> Patient Form </h4>\n                        <TextValidator\n                            label=\"Assigned Worker Id\"\n                            onChange={this.handleChange}\n                            name=\"id\"\n                            value={this.state.assessments.id}\n                            validators={['required']}\n                            errorMessages={['this field is required']}\n                        />\n                        <br/>\n                        <TextValidator\n                            label=\"Patient ID\"\n                            onChange={this.handleChange}\n                            name=\"patient_id\"\n                            value={this.state.assessments.patient_id}\n                            validators={['required']}\n                            errorMessages={['this field is required']}\n                        />\n                        <br/>\n\n                        <TextValidator\n                            label=\"Initials\"\n                            onChange={this.handleChange}\n                            name=\"initial\"\n                            value={this.state.assessments.initial}\n                            validators={['required']}\n                            errorMessages={['this field is required']}\n\n                        />\n                        <br/>\n\n                        <TextValidator\n                            label=\"Age\"\n                            onChange={this.handleChange}\n                            name=\"patient_age\"\n                            value={this.state.assessments.patient_age}\n                            validators={['required','minNumber:0', 'maxNumber:200', 'matchRegexp:^[0-9]*$']}\n                            errorMessages={['this field is required', 'MUST BE BETWEEN 0-200']}\n                        />\n                        <br/>\n                        <br/>\n                        <label>Gestational Age:</label>\n                        <select\n                            value={this.state.assessments.time_scale}\n                            onChange={this.handleChange}\n                            name=\"time_scale\"\n                        >\n                            <option value=\"\"> --SELECT ONE---</option>\n                            <option value=\"w\"> Weeks</option>\n                            <option value=\"m\"> Months</option>\n                            <option value=\"n/a\"> Not Pregnant</option>\n                        </select>\n                        <br/>\n\n\n                        <TextValidator\n                            label=\"Gestational Age\"\n                            onChange={this.handleChange}\n                            name=\"gestational_age\"\n                            value={this.state.assessments.gestational_age}\n                            validators={['required', 'minNumber:0', 'maxNumber:60', 'matchRegexp:^[0-9]*$']}\n                            errorMessages={['this field is required','MUST BE BETWEEN 0-60','MUST BE BETWEEN 0-60','MUST BE BETWEEN 0-60']}\n                        />\n                    </Cell>\n                    <Cell col={4}>\n                        <h4> Symptoms </h4>\n\n                        {symptom}\n\n\n                        <TextValidator\n                            label=\"Other Symptoms\"\n                            onChange={this.handleChange}\n                            name=\"temp_symptoms\"\n                            value={this.state.assessments.temp_symptoms}\n                        />\n\n                        <br/>\n                    </Cell>\n                    <Cell col = {4}>\n\n                        <h4>Vitals</h4>\n                        <TextValidator\n                            label=\"Systolic\"\n                            onChange={this.handleChange}\n                            name=\"systolic\"\n                            value={this.state.assessments.systolic}\n                            validators={['required', 'minNumber:0', 'maxNumber:300', 'matchRegexp:^[0-9]*$']}\n                            errorMessages={['this field is required','MUST BE BETWEEN 0-300']}\n                        />\n                        <br/>\n                        <TextValidator\n                            label=\"Diastolic\"\n                            onChange={this.handleChange}\n                            name=\"diastolic\"\n                            value={this.state.assessments.diastolic}\n                            validators={['required', 'minNumber:0', 'maxNumber:300', 'matchRegexp:^[0-9]*$']}\n                            errorMessages={['this field is required','MUST BE BETWEEN 0-300']}\n                        />\n                        <br/>\n                        <TextValidator\n                            label=\"Heart Rate\"\n                            onChange = {this.handleChange}\n                            name=\"heart_rate\"\n                            value={this.state.assessments.heart_rate}\n                            validators={['required', 'minNumber:0', 'maxNumber:300', 'matchRegexp:^[0-9]*$']}\n                            errorMessages={['this field is required','MUST BE BETWEEN 0-300']}\n                        />\n                        <br/>\n                        <TextValidator\n                            label=\"Early Warning Sign\"\n                            onChange={this.handleChange}\n                            name=\"ews_color\"\n                            value={this.state.assessments.ews_color}\n                            validators={['isValidEWS', 'required']} //TO DO\n                            errorMessages={['Must be one of green, yellow, or red', 'this field is required']}\n                        />\n                    </Cell>\n                </Grid>\n                <br/>\n\n                <br/>\n                <Button type=\"submit\" style={{\n                    backgroundColor: 'blue',\n                    color:'white'\n                }}>Submit</Button>\n                <br/>\n                <br/>\n\n            </ValidatorForm>\n        );\n    }\n}\n\n\n\n\nexport default NewAssessment\n","import React, {Component} from 'react';\nimport MaterialTable from 'material-table';\nimport './AdminLanding.css';\nimport logo from \"../logo.svg\";\nimport {useState} from \"react\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\n\nclass Landing_List extends Component {\n\n    render() {\n      return (\n          <div>\n            <SimpleTabs/>\n          </div>\n      );\n    }\n  }\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n      <Typography\n          component=\"div\"\n          role=\"tabpanel\"\n          hidden={value !== index}\n          id={`simple-tabpanel-${index}`}\n          aria-labelledby={`simple-tab-${index}`}\n          {...other}\n      >\n        <Box p={2}>{children}</Box>\n      </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  appbar:{\n    alignItems: 'center',\n  }\n}));\n\nfunction SimpleTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n      <div className={classes.root}>\n        <AppBar className={classes.appbar} position=\"static\">\n          <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n            <Tab label=\"Patients\" {...a11yProps(0)} />\n            <Tab label=\"Users\" {...a11yProps(1)} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0}>\n          <Patient_list/>\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n          <User_list/>\n        </TabPanel>\n      </div>\n  );\n}\n\nfunction Patient_list() {\n    const [state, setState] = React.useState({\n      columns: [\n        { title: 'Name', field: 'name' },\n        { title: 'Surname', field: 'surname' },\n        { title: 'Sex', field: 'sex'},\n        { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n        { title: 'ID Number', field: 'id', type: 'numberic'},\n      ],\n      data: [\n        { name: 'Ann',\n          surname: 'Howard',\n          sex: 'F',\n          birthYear: 1987,\n          id: 849567 },\n        {\n          name: 'Kenneth',\n          surname: 'Washington',\n          sex: 'M',\n          birthYear: 2017,\n          id: 374856,\n        },\n        {\n          name: 'Shayla',\n          surname: 'Owens',\n          sex: 'F',\n          birthYear: 1991,\n          id: 384957,\n        },\n        {\n          name: 'Kirsten',\n          surname: 'Turner',\n          sex: 'F',\n          birthYear: 1972,\n          id: 794057,\n        },\n      ],\n    });\n\n    return (\n      <div className = \"table-position\" >\n      <MaterialTable\n        title=\"Patients\"\n        columns={state.columns}\n        data={state.data}\n        editable={{\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data[data.indexOf(oldData)] = newData;\n                setState({ ...state, data });\n              }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...state.data];\n                data.splice(data.indexOf(oldData), 1);\n                setState({ ...state, data });\n              }, 600);\n            }),\n\n          onRowAdd: newData =>\n              new Promise((resolve, reject) => {\n                setTimeout(() => {\n                  {\n                    const data = [...state.data];\n                    data.push(newData);\n                    setState({ ...state, data });\n                  }\n                  resolve();\n                }, 600);\n              }),\n        }}\n\n      //Other Actions\n      actions={[\n        {\n          //Graph button for patient chart\n          icon: 'assessment',\n          tooltip: 'Graph',\n          onClick: () => {\n            //Popup for Patient chart\n            window.open(\"/users/PatientChart\",'popUpWindow',\n            'height=500,width=800,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes')\n          }\n        }\n      ]}\n        />\n      </div>\n    );\n}\n\nfunction User_list() {\n  const [state, setState] = React.useState({\n    columns: [\n      { title: 'Username', field: 'username' },\n      { title: 'Password', field: 'password' },\n      { title: 'Role', field: 'role', type: 'array' },\n      { title: 'Name', field: 'name' },\n      { title: 'Surname', field: 'surname' },\n      { title: 'Sex', field: 'sex'},\n      { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n      { title: 'ID Number', field: 'id', type: 'numberic'},\n    ],\n    data: [\n      {\n        username: 'ahoward849567',\n        password: 'password1',\n        role: [\"CHO \"],\n        name: 'Ann',\n        surname: 'Howard',\n        sex: 'F',\n        birthYear: 1987,\n        id: 849567 },\n      {\n        username: 'kwashington374856',\n        password: 'password1',\n        role: [\"CHO \",\"Healthcare Worker \"],\n        name: 'Kenneth',\n        surname: 'Washington',\n        sex: 'M',\n        birthYear: 2017,\n        id: 374856,\n      },\n      {\n        username: 'sowens384957',\n        password: 'password1',\n        role: ['CHO ', 'Healthcare Worker ', 'VHT'],\n        name: 'Shayla',\n        surname: 'Owens',\n        sex: 'F',\n        birthYear: 1991,\n        id: 384957,\n      },\n      {\n        username: 'kturner794057',\n        password: 'password1',\n        role: ['CHO ','VHT '],\n        name: 'Kirsten',\n        surname: 'Turner',\n        sex: 'F',\n        birthYear: 1972,\n        id: 794057,\n      },\n    ],\n  });\n\n  return (\n      <div className = \"table-position\" >\n        <MaterialTable\n            title=\"Admins\"\n            columns={state.columns}\n            data={state.data}\n            editable={{\n              onRowUpdate: (newData, oldData) =>\n                  new Promise(resolve => {\n                    setTimeout(() => {\n                      resolve();\n                      const data = [...state.data];\n                      data[data.indexOf(oldData)] = newData;\n                      setState({ ...state, data });\n                    }, 600);\n                  }),\n              onRowDelete: oldData =>\n                  new Promise(resolve => {\n                    setTimeout(() => {\n                      resolve();\n                      const data = [...state.data];\n                      data.splice(data.indexOf(oldData), 1);\n                      setState({ ...state, data });\n                    }, 600);\n                  }),\n              onRowAdd: newData =>\n                  new Promise((resolve, reject) => {\n                    setTimeout(() => {\n                      {\n                        const data = [...state.data];\n                        data.push(newData);\n                        setState({ ...state, data });\n                      }\n                      resolve();\n                    }, 600);\n                  }),\n            }}\n\n            //Other Actions\n            actions={[\n              {\n                //Graph button for patient chart\n                icon: 'assessment',\n                tooltip: 'Graph',\n                onClick: () => {\n                  //Popup for Patient chart\n                  window.open(\"/users/PatientChart\",'popUpWindow',\n                      'height=500,width=800,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes')\n                }\n              }\n            ]}\n        />\n      </div>\n  );\n}\n\n\n\n\n\nexport default Landing_List;","import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport React, {Component} from 'react';\nimport axios from 'axios';\n\nimport '../App.css';\n\nimport { Redirect } from 'react-router-dom';\n\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      username:'',\n      password:'',\n      id: '',\n      error: false,\n      errorMsg: '',\n      isAdmin: false,\n      isUser: false,\n    }\n  }\n\n  setTheState(response) {\n    this.setState({\n      id: response.data.name,\n    })\n  }\n\n  setRole(response) {\n    response.data.roles.forEach( role => {\n\n      console.log(\"role given to user: \", role)\n      console.log(\"role given to user: \", role.role)\n\n      if (role.role == 'ADMIN') {\n        console.log('is admin')\n        this.setState({\n          isAdmin: true\n        })\n      }\n\n      if (role.role == 'USER') {\n        console.log('is user')\n        this.setState({\n          isUser: true\n        })\n      }\n      \n    });\n  }\n\n  navigate(response) {\n    if (this.state.isAdmin) {\n      this.props.history.push(\n        '/admin-dashboard',\n        { detail: response.data }\n      )\n    } else {\n      this.props.history.push(\n        '/user-dashboard',\n        { detail: response.data }\n      )\n    }\n  }\n\n  testConsoleLog(response) {\n    console.log(\"response from server: \", response, this.state)\n    console.log(\"decomposing response: \", response.data.id, \" \", response.data.name, response.status)\n  }\n\n  loginHandler = e => {\n    e.preventDefault()\n\n    axios.post('http://localhost:8080/users/login', this.state)\n        .then(response => {\n            localStorage.setItem(\"isLoggedIn\", \"true\")\n            this.setTheState(response)\n            this.testConsoleLog(response)\n            this.setRole(response)\n            this.navigate(response)\n        })\n        .catch(error => {\n            console.log('error block')\n            console.log(error)\n            this.setState({\n              error: true, \n              errorMsg: 'Invalid Login'\n            })\n        })\n  }\n\n  showErrorMsg() {\n    return <p>{this.state.errorMsg}</p>\n  }\n\n  render() {\n\n      return (\n        <div>\n          <MuiThemeProvider>\n            <div className='login-form'>\n            <h2 style = {{color : \"white\"}}> Please Login </h2>\n            <TextField\n              hintText=\"Enter your Username\"\n              inputStyle={styles.white}\n              floatingLabelText=\"Username\"\n              hintStyle={styles.grey}\n              floatingLabelStyle={styles.input}\n              onChange = {(event,newValue) => this.setState({username:newValue})}\n              />\n            <br/>\n              <TextField\n                type=\"password\"\n                hintText=\"Enter your Password\"\n                inputStyle={styles.white}\n                hintStyle={styles.grey}\n                floatingLabelText=\"Password\"\n                floatingLabelStyle={styles.input}\n                onChange = {(event,newValue) => this.setState({password:newValue})}\n                />\n              <br/>\n              <div className='errorMsg'>\n                {(this.state.error ? this.showErrorMsg() : '' )}\n              </div>\n              <RaisedButton label=\"Submit\" primary={true} style={styles.button} onClick={(event) => this.loginHandler(event)}/>\n          </div>\n          </MuiThemeProvider>\n        </div>\n      );\n  }\n}\n\n\nconst styles = {\n  'button': {\n    margin: 15,\n  },\n  'input': {\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    width: '100%',\n    color: 'white'\n  },\n  'white': {\n    color: 'white'\n  },\n  'grey': {\n    color: 'grey'\n  }\n};\n\nexport default Login;","import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport TextField from 'material-ui/TextField';\nimport React, {Component} from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Register extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      id: '',\n      name:'',\n      address: '',\n      dob: '',\n      gender: '',\n      username:'',\n      password:'',\n      passwordRetyped:'',\n      error: false,\n      errorMsg: '',\n      disableButton: false,\n    }\n  }\n\n  checkPasswordMatch() {\n    if (this.state.password.trim() === \"\" || this.state.password != this.state.passwordRetyped) {\n        console.log('Passwords mismatched')\n        this.setState({\n            error: true,\n            errorMsg: \"Passwords do not match\"\n        }, () => {console.log(this.state.password, this.state.passwordRetyped)})\n        return false;\n    }\n    return true;\n  }\n\n  testConsoleLog(response) {\n    console.log(\"response from server: \", response, this.state)\n    console.log(\"decomposing response: \", response.data.id, \" \", response.data.name, response.status)\n  }\n\n  clearFields() {\n    this.setState({\n        id: '',\n        name:'',\n        address: '',\n        dob: '',\n        gender: '',\n        username:'',\n        password:'',\n        passwordRetyped:'',\n        error: false,\n        errorMsg: '',\n        disableButton: true\n    }, () => { document.getElementById(\"register-form\").reset() })\n  }\n\n\n  isFieldEmpty() {\n    if (this.state.id === \"\" || this.state.name === \"\") {\n      return true;\n    }\n    if (this.state.address === \"\" || this.state.gender === \"\") {\n      return true;\n    }\n    if (this.state.dob === \"\" || this.state.username === \"\") {\n      return true;\n    }\n\n    return false;\n  }\n\n  registerHandler = e => {\n    e.preventDefault()\n\n    var passwordMatch = this.checkPasswordMatch()\n    var fieldEmpty = this.isFieldEmpty()\n\n    if (!passwordMatch) {return;}\n\n    if (fieldEmpty) {return;}\n\n    console.log(\"State before calling register function\", this.state)\n\n    axios.post('http://localhost:8080/users/register', this.state)\n        .then(response => {\n            toast(\"User Added\");\n            this.clearFields()\n          })\n        .catch(error => {\n            console.log('error block')\n            console.log(error)\n            this.setState({\n              error: true, \n              errorMsg: 'Unable to register'\n            })\n        })\n  }\n\n  showErrorMsg() {\n    return <p>{this.state.errorMsg}</p>\n  }\n\n  radioHandler(e) {\n    console.log(e.target)\n    var target = e.target.name\n    var value = e.target.value\n\n    this.setState({\n      [target]: value\n    }, () => {console.log(\"gender in state: \", this.state.gender)})\n  }\n\n  handleDatePicker(value) {\n\n    this.setState({\n      dob: value\n    }, () => {console.log(\"Current State\", this.state)})\n    \n  }\n\n  render() {\n  toast.configure()\n\n      return (\n        <div>\n          <MuiThemeProvider>\n            <div className='login-form'>\n              <form id=\"register-form\">\n                <TextField\n                  hintText=\"Enter your Worker Id\"\n                  inputStyle={styles.white}\n                  floatingLabelText=\"Worker Id\"\n                  hintStyle={styles.grey}\n                  floatingLabelStyle={styles.input}\n                  onChange = {(event,newValue) => this.setState({id:newValue})}\n                />\n                <br/>\n                <TextField\n                  hintText=\"Enter your Name\"\n                  inputStyle={styles.white}\n                  floatingLabelText=\"Name\"\n                  hintStyle={styles.grey}\n                  floatingLabelStyle={styles.input}\n                  onChange = {(event,newValue) => this.setState({name:newValue})}\n                />\n                <br/>\n                <TextField\n                  hintText=\"Address\"\n                  inputStyle={styles.white}\n                  floatingLabelText=\"Address\"\n                  hintStyle={styles.grey}\n                  floatingLabelStyle={styles.input}\n                  onChange = {(event,newValue) => this.setState({address:newValue})}\n                />\n                <br/>\n                <TextField\n                  hintText=\"Enter your Username\"\n                  inputStyle={styles.white}\n                  floatingLabelText=\"Username\"\n                  hintStyle={styles.grey}\n                  floatingLabelStyle={styles.input}\n                  onChange = {(event,newValue) => this.setState({username:newValue})}\n                />\n                <br/>\n                  <TextField\n                    type=\"password\"\n                    hintText=\"Enter your Password\"\n                    inputStyle={styles.white}\n                    hintStyle={styles.grey}\n                    floatingLabelText=\"Password\"\n                    floatingLabelStyle={styles.input}\n                    onChange = {(event,newValue) => this.setState({password:newValue})}\n                  />\n                  <br/>\n                  <TextField\n                    type=\"password\"\n                    hintText=\"Retype your Password\"\n                    inputStyle={styles.white}\n                    hintStyle={styles.grey}\n                    floatingLabelText=\"Retype your Password\"\n                    floatingLabelStyle={styles.input}\n                    onChange = {(event,newValue) => this.setState({passwordRetyped:newValue})}\n                  />\n                  <br/>\n                  <TextField\n                    hintText=\"(MM/DD/YYYY)\"\n                    inputStyle={styles.white}\n                    floatingLabelText=\"Date Of Birth (MM/DD/YYYY)\"\n                    hintStyle={styles.grey}\n                    floatingLabelStyle={styles.input}\n                    onChange = {(event,newValue) => this.setState({dob:newValue})}\n                  />\n                  <br/>\n                  <br/>\n\n                  <input type=\"radio\" value=\"MALE\" name=\"gender\" checked={this.state.gender === \"MALE\"} onChange = {(e) => this.radioHandler(e)}/> Male\n                  <input type=\"radio\" value=\"FEMALE\" name=\"gender\" checked={this.state.gender === \"FEMALE\"} onChange = {(e) => this.radioHandler(e)}/> Female\n\n                  <div className='errorMsg'>\n                    {(this.state.error ? this.showErrorMsg() : '' )}\n                  </div>\n\n                  <ToastContainer position={toast.POSITION.BOTTOM_RIGHT}/>\n                  <RaisedButton disable={this.state.disableButton} label=\"Register\" primary={true} style={styles.button} onClick={(event) => this.registerHandler(event)}/>\n                  \n                </form>\n            </div>\n          </MuiThemeProvider>\n        </div>\n      );\n  }\n}\n\n\nconst styles = {\n  'button': {\n    margin: 15,\n  },\n  'input': {\n    textOverflow: 'ellipsis',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    width: '100%',\n    color: 'white'\n  },\n  'white': {\n    color: 'white'\n  },\n  'grey': {\n    color: 'grey'\n  }\n};\n\nexport default Register;","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { MDBContainer } from \"mdbreact\";\n\nclass PatientChart extends React.Component {\n  state = {\n    dataLine: {\n      labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n      datasets: [\n        {\n          label: \"Systolic\",\n          fill: true,\n          backgroundColor: \"rgba(255, 157, 148, .3)\",\n          borderColor: \"red\",\n          data: [65, 59, 80, 81, 56, 55, 40, 50, 62, 81, 90, 100]\n        },\n        {\n          label: \"Diastolic\",\n          fill: true,\n          backgroundColor: \"rgba(97, 105, 255, .3)\",\n          borderColor: \"blue\",\n          data: [60, 102, 98, 80, 86, 90, 90, 82, 91, 95, 85, 80]\n        },\n        {label: \"Heart Rate\",\n          fill: true,\n          backgroundColor: \"rgba(159, 255, 133, .3)\",\n          borderColor: \"Green\",\n          data: [80, 89, 98, 150, 86, 81, 90, 82, 91, 95, 120, 200]\n      }\n      ]\n    },\n    options: {\n      legend:{\n        labels:{\n          fontColor: \"white\"\n        }\n      },\n      scales:{\n        yAxes:[{\n          ticks:{\n            fontColor: \"white\",\n            fontSize: 15\n          }\n        }]\n      }\n    }\n  };\n\n  render() {\n    return (\n      <MDBContainer>\n        <h3 className=\"mt-5\">Blood Pressure</h3>\n        <Line data={this.state.dataLine} options={{ responsive: true }} />\n      </MDBContainer>\n    );\n  }\n}\n\nexport default PatientChart;","import React, {Component} from 'react';\nimport MaterialTable from 'material-table';\nimport './PatientList.css';\nimport PatientChart from './PatientChart';\n\nimport axios from 'axios';\n\nclass PatientList extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      columns: [],\n      data: []\n    }\n  }\n  \n  componentDidMount() {\n    this.getPatientList()\n    this.setState({\n      columns: [\n        { title: 'Name', field: 'name' },\n        { title: 'Surname', field: 'surname' },\n        { title: 'Sex', field: 'sex'},\n        { title: 'Birth Date', field: 'birthDate'},\n        { title: 'ID Number', field: 'id'},\n      ], \n      data: [\n        { \n          name: 'Ann',\n          surname: 'Howard',\n          sex: 'F', \n          birthYear: 1987, \n          id: 849567 },\n        {\n          name: 'Kenneth',\n          surname: 'Washington',\n          sex: 'M',\n          birthYear: 2017,\n          id: 374856,\n        },\n        {\n          name: 'Shayla',\n          surname: 'Owens',\n          sex: 'F',\n          birthYear: 1991,\n          id: 384957,\n        },\n        {\n          name: 'Kirsten',\n          surname: 'Turner',\n          sex: 'F',\n          birthYear: 1972,\n          id: 794057,\n        },\n      ],\n    })\n  }\n  \n\n  populateData(response) {\n    console.log(response)\n    var patientList = []\n    response.forEach(patient => {\n      var name = (patient.name.split(\" \"))[0]\n      var surname = (patient.name.split(\" \"))[1]\n      var birthDate = patient.birth_date\n      var sex = patient.gender[0]\n      var id = patient.id\n      \n      var patient = {\n        name: name,\n        surname: surname,\n        birthDate: birthDate,\n        sex: sex,\n        id : id\n      }\n\n      patientList.push(patient)\n    });\n\n    this.setState({data: patientList})\n\n  }\n\n  getPatientList() {\n    axios.get('http://localhost:8080/patients/all', this.state)\n      .then(response => {\n        // console.log(\"response from server: \", response)\n        this.populateData(response.data)\n      })\n      .catch(error => {\n          console.log('error block')\n          console.log(error)\n          this.setState({\n            error: true, \n            errorMsg: 'Invalid Login'\n          })\n      })\n}\n\nrender() {\n  return (\n    \n    <div className = \"table-position\" >\n    <MaterialTable\n      title=\"Patients\"\n      columns={this.state.columns}\n      data={this.state.data}\n      editable={{\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data[data.indexOf(oldData)] = newData;\n              this.setState({ ...this.state, data });\n            }, 600);\n          }),\n        onRowDelete: oldData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              const data = [...this.state.data];\n              data.splice(data.indexOf(oldData), 1);\n              this.setState({ ...this.state, data });\n            }, 600);\n          }),\n        onRowAdd: newData =>\n            new Promise((resolve, reject) => {\n              setTimeout(() => {\n                {\n                  const data = [...this.state.data];\n                  data.push(newData);\n                  this.setState({ ...this.state, data });\n                }\n                resolve();\n              }, 1000);\n            }),\n        // onRowAdd: newData =>\n        //     new Promise((resolve) => {\n        //       console.log(\"onrowadd\", newData)\n        //     }),\n\n      }}\n  \n  //Other Actions\n  actions={[\n    {\n      //Graph button for patient chart\n      icon: 'assessment',\n      tooltip: 'Graph',\n      onClick: () => {\n        //Popup for Patient chart, opens PatientChart.js\n        window.open(\"/users/PatientChart\")\n          //'popUpWindow',\n        //'height=500,width=800,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes')\n        //window.location.pathname = \"/users/PatientList\";\n      }\n    }\n  ]}\n    />\n  </div>\n\n  );\n}\n\n\n\n}\nexport default PatientList;","import React, {Component} from 'react';\nimport MaterialTable from 'material-table';\nimport './AssessmentList.css';\n\nimport axios from 'axios';\n\nclass AssessmentList extends Component {\n\n  constructor(props){\n    super(props);\n    this.state={\n      columns: [],\n      data: []\n    }\n  }\n  \n  componentDidMount() {\n    this.getAssessmentList()\n    this.setState({\n      columns: [\n        { title: 'patient Id', field: 'patient_id' },\n        { title: 'Patient Age', field: 'patient_age' },\n        { title: 'vht Id', field: 'vht_id'},\n        { title: 'Date', field: 'date'},\n        { title: 'Gestational Age', field: 'gestational_age'},\n        { title: 'Heart Rate', field: 'heart_rate'},\n        { title: 'Systolic', field: 'systolic'},\n        { title: 'Early Warning Color', field: 'ews_color'},\n        { title: 'Symptoms', field: 'symptoms'},\n        { title: 'Referred?', field: 'referred'},\n        { title: 'Follow Up?', field: 'follow_up'},\n        { title: 'Follow Up Date', field: 'follow_up_date'},\n        { title: 'Recheck?', field: 'recheck'},\n        { title: 'Id Number', field: 'id'},\n      ], \n      data: [\n        { \n          patient_id: 'Ann',\n          patient_age: 'Howard',\n          vht_id: '1987', \n          date: 'Sept 1, 2019' },\n      ],\n    })\n  }\n  \n\n  populateData(response) {\n    console.log(response)\n    var assessmentList = []\n    response.forEach(assessment => {\n      var patient_id = assessment.patient_id\n      var patient_age = assessment.patient_age\n      var vht_id = assessment.vht_id\n      var date = assessment.date\n      var gestational_age = assessment.gestational_age\n      var heart_rate = assessment.heart_rate\n      var systolic = assessment.systolic\n      var diastolic = assessment.diastolic\n      var ews_color = assessment.ews_color\n      var symptoms = assessment.symptoms\n      var referred = assessment.referred\n      var follow_up = assessment.follow_up\n      var follow_up_date = assessment.follow_up_date\n      var recheck = assessment.recheck\n      var id  = assessment._id\n      \n      var assessment_obj = {\n        patient_id: patient_id,\n        patient_age: patient_age,\n        vht_id: vht_id,\n        date: date,\n        gestational_age: gestational_age,\n        heart_rate: heart_rate,\n        systolic: systolic,\n        diastolic: diastolic,\n        ews_color: ews_color,\n        symptoms: symptoms,\n        referred: referred.toString(),\n        follow_up: follow_up.toString(),\n        follow_up_date : follow_up_date,\n        recheck: recheck.toString(),\n        id : id\n      }\n\n      assessmentList.push(assessment_obj)\n    });\n\n    this.setState({data: assessmentList})\n\n  }\n\n  getAssessmentList() {\n    axios.get('http://localhost:8080/assessments/all', this.state)\n      .then(response => {\n        // console.log(\"response from server: \", response)\n        this.populateData(response.data)\n      })\n      .catch(error => {\n          console.log('error block')\n          console.log(error)\n          this.setState({\n            error: true, \n            errorMsg: 'Invalid Login'\n          })\n      })\n}\n\nrender() {\n  return (\n    \n    <div className = \"table-position\" >\n    \n      <MaterialTable\n        title=\"Assessment List\"\n        columns={this.state.columns}\n        data={this.state.data}\n        editable={{\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...this.state.data];\n                data[data.indexOf(oldData)] = newData;\n                this.setState({ ...this.state, data });\n              }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                const data = [...this.state.data];\n                data.splice(data.indexOf(oldData), 1);\n                this.setState({ ...this.state, data });\n              }, 600);\n            }),\n        }}\n        //Other Actions\n        actions={[\n          {\n            //Graph button for patient chart\n            icon: 'assessment',\n            tooltip: 'Graph',\n            onClick: () => {\n              //Popup for Patient chart, opens PatientChart.js\n              window.open(\"/users/PatientChart\")\n                //'popUpWindow',\n              //'height=500,width=800,left=100,top=100,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes')\n              //window.location.pathname = \"/users/PatientList\";\n            }\n          }\n        ]}\n      />\n  </div>\n\n  );\n}\n\n\n\n}\nexport default AssessmentList;","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport LandingPage from './landingpage';\nimport Form from './Assessment/NewAssessment';\nimport Landing_List from './AdminLanding';\nimport Login  from './login';\nimport Register  from './register';\nimport PatientList from './PatientList';\nimport PatientChart from './PatientChart';\nimport AssessmentList from './AssessmentList';\n\n\nconst Navigation = () => (\n  <Switch>\n    <Route exact path = \"/\" component = {LandingPage} />\n\n    {/* <Route path = \"/users/form\" component = {Form} /> */}\n\n    {/* <PrivateRoute path = \"/users/hello\" component = {Hello} /> */}\n    <Route exact path = \"/user-dashboard\" component = {PatientList} />\n    <Route exact path = \"/admin-dashboard\" component = {Landing_List} />\n    <Route exact path = \"/login\" component = {Login} />\n    <PrivateRoute exact path = \"/register\" component = {Register} />\n    <Route exact path = \"/users/AssessmentList\" component = {AssessmentList} />\n    <Route path = \"/login\" component = {Login} />\n    <Route path = \"/users/admin/landing\" component = {Landing_List} />\n    <Route path = \"/users/PatientList\" component = {PatientList} />\n    <Route path = \"/users/PatientChart\" component = {PatientChart} />\n    <Route path = \"/users/form\" component = {Form} />\n\n  </Switch>\n)\n\n\nfunction PrivateRoute ({component: Component, authed, ...rest}) {\n  return (\n    <Route {...rest} render={(props) => (\n      localStorage.getItem('isLoggedIn') === 'true'\n        ? <Component {...props} />\n        : <Redirect to={{\n            pathname: '/login',\n            state: { from: props.location }\n          }} />\n    )} />\n  )\n}\n\n\nexport default Navigation;","// All the rest of the content of the landing page is coming from \nimport React, {Component} from 'react';\nimport logo from './logo.svg';\nimport {Layout, Header, Navigation, Drawer, Content} from 'react-mdl';\nimport {Link} from 'react-router-dom';\nimport Nav from './components/navigation';\nimport './App.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"demo-big-content\">\n          <Layout fixedHeader>\n              <Header className = \"header-color\" title=\"CRADLE\" transparent scroll waterfall seamed>\n                  <Navigation>\n                      <Link to =\"/\">Home</Link>\n                      <Link to =\"/users/admin/landing\">Admin Landing page</Link>\n                      <Link to =\"/users/PatientList\">Patient List</Link>\n                      <Link to =\"/users/AssessmentList\">Assessments List</Link>\n                      <Link to =\"/users/PatientChart\">Patient Chart</Link>\n                  </Navigation>\n              </Header>\n              <Drawer title=\"CRADLE\">\n                  <Navigation>\n                      <Link to =\"/login\">Login</Link>\n                      <Link to =\"/users/form\">New Assessment</Link>\n                  </Navigation>\n              </Drawer>\n              <Content>\n                  <div className=\"page-content\" />\n                  <Nav/>\n              </Content>\n          </Layout>\n      </div>\n    );\n  }\n}\n  \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render( \n    <BrowserRouter>\n    <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n    ); //Get the root element and render the react application you need\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}